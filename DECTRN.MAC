.INCLUDE /DECDFN/
.MODULE DECTRN,RELEASE=V05,VERSION=01,COMMENT=<ТРАНСЛЯЦИЯ КОМАНД. СТРОКИ>

.REM	\


   ФОРМАТ СПИСКА КОМАНД:
	-----------------
	!     LINK	!   C$LINK
	-----------------
	!      LC	!   C$LC
	-----------------
	! NO. W.!  CMD	!   C$CMD,C$NUM
	-----------------
	! ДОП. СЛОВА.	!   C$PARM
	-----------------
		.	    C$PARM+2
		.
		.

\
	.PSECT	DECTRN,I,RO

............................................................
;
; П/П ТРАНСЛЯЦИИ ВХОДНОЙ СТРОКИ
; ВХОД: R0 -> ВХОДНАЯ СТРОКА СИМВОЛОВ
; ВЫХОД: CMDBUF СОДЕРЖИТ ОБРАБОТАННУЮ СТРОКУ
;
............................................................
.ENABL	LSB
LINTRN::
	JSR	R1,$SAVE5
	MOV	#C.MN.T,R1	; ТАБЛИЦА КОМАНД
	MOV	R0,R2		; СОХРАНИТЬ АДРЕС НАЧАЛА СТРОКИ
1$:	MOVB	(R1)+,R4	; НОМЕР КОМАНДЫ
	BMI	ERR		; КОНЕЦ СПИСКА - НЕ НАШЛИ КОМАНДУ
	MOV	R2,R0		; НА НАЧАЛО СТРОКИ
2$:	MOVB	(R1)+,R3	; ОЧЕРЕДНОЙ СИМВОЛ ИЗ ТАБЛИЦЫ
	BEQ	4$		; КОНЕЦ СТРОКИ - НАШЛИ КОМАНДУ
	MOVB	(R0)+,-(SP)	; ОЧЕРЕДНОЙ СИМВОЛ ИЗ СТРОКИ
	CALL	UPPCAS		; УСТАНОВИТЬ ВЕРХНИЙ РЕГИСТР
	CMPB	(SP)+,R3	; СИМВОЛ СОВПАДАЕТ?
	BEQ	2$		; ДА, ПРОДОЛЖИМ СРАВНЕНИЕ
3$:	TSTB	(R1)+		; ПРОПУСТИМ ОСТАТОК СТРОКИ
	BNE	3$
	BR	1$		; ПРОДОЛЖИМ ПОИСК

4$:	CALL	TSTDLM		; ПРОВЕРИМ НА РАЗДЕЛИТЕЛЬ/КОНЕЦ СТРОКИ
	BCS	44$		; КОНЕЦ СТРОКИ - НОРМАЛЬНО
	BNE	1$		; НЕ СИМВОЛ-РАЗДЕЛИТЕЛЬ И НЕ КОНЕЦ СТРОКИ

44$:	DEC	R0
	MOV	#CMDBUF+C$CMD,R1 ; КУДА ЗАСЫЛАТЬ ОТТРАНСЛ. КОМАНДУ
	MOVB	R4,(R1)+	; НОМЕР КОМАНДЫ
	CLRB	(R1)+		; ЧИСЛО ДОП. СЛОВ (C$NUM)
	ASL	R4		; ИНДЕКС В CMDFLG
	MOV	CMDFLG(R4),R2	; ПЕРЕСЛАТЬ ФЛАГИ КОМАНДЫ

	BIT	#M.PARM,R2	; ДОЛЖЕН СЛЕДОВАТЬ ПАРАМЕТР?
	BEQ	7$		; НЕТ
	DEC	R2		; СБРОСИТЬ БИТ
5$:	CALL	TSTDLM		; ПРОВЕРИТЬ НА ДОПУСТИМЫЙ РАЗДЕЛИТЕЛЬ
	BCS	RET		; КОНЕЦ СТРОКИ
	BNE	ERR		; НЕТ
	MOV	R2,-(SP)	; СОХРАНИТЬ ФЛАГИ КОМАНДЫ
	CALL	PARMUP		; НАЙТИ ПАРАМЕТР
	MOV	(SP)+,R2	; ВОССТАНОВИТЬ ФЛАГИ КОМАНДЫ
	BCS	6$		; ПАРАМЕТР НЕ НАЙДЕН
	BIT	#М.NARG,R3	; ЗАКОН^ИТЬ РАЗБОР?
	BNE	RET		; ДА
	BIT	#M.NEXT,R3	; ПОВТОРИТЬ ОБРАБОТКУ ПАРАМЕТРА ИЗ ТОГО ЖЕ СП.
	BNE	5$		; ДА
	CALL	TSTDLM		; ПРОВЕРИТЬ НА ДОПУСТИМЫЙ РАЗДЕЛИТЕЛЬ
	BCS	RET		; КОНЕЦ СТРОКИ
	BNE	ERR		; НЕДОП. РАЗДЕЛИТЕЛЬ
	BIT	#M.LAB,R3	; ДОЛЖНА БЫТЬ МЕТКА?
	BNE	LABUP		; ДА
	BIT	#M.RAD,R3	; ДОЖНО БЫТЬ ЗНАЧЕНИЕ В RAD50
	BNE	RADUP		; ДА
	BR	COMMON
6$:	TST	CTXFLG		; ВЫЗОВ  ИЗ DECCTX - МОЖЕТ БЫТЬ ЧИСЛО
	BEQ	ERR
	BR	COMMON

7$:	BIT	#M.CMT,R2	; КОММЕНТАРИЙ?
	BEQ	8$
	CALLR	COMM		; ОТРАБОТЬ КОММЕНТАРИЙ (ПЕРЕСЛАТЬ ВСЕ)

8$:	BIT	#M.NARG,R2	; КОНЕЦ ТРАНСЛЯЦИИ? (НЕ ДОЛЖНО БЫТЬ АРГ.)
	BNE	RET		; ДА, ВОЗВРАТ

	CALL	TSTDLM		; ПРОВЕРИТЬ НА ДОПУСТИМЫЙ РАЗДЕЛИТЕЛЬ
	BCS	RET		; КОНЕЦ СТРОКИ
	BNE	ERR		; НЕТ

	BIT	#M.RAD,R2	; ДОЛЖЕН БЫТЬ СИМВОЛ В RAD50?
	BEQ	81$		; НЕТ

RADUP:	CALL	ASCR50		; ПРЕОБР. ИМЯ В RAD50
	MOV	R50NAM,(R1)+
	BEQ	ERR
	MOV	R50NAM+2,(R1)+
	INCB	CMDBUF+C$NUM	; УВЕЛИЧИМ СЧЕТЧИК
	INCB	CMDBUF+C$NUM	; УВЕЛИЧИМ СЧЕТЧИК
	CALL	TSTDLM		; ПРОВЕРИТЬ НА ДОПУСТИМЫЙ РАЗДЕЛИТЕЛЬ
	BCS	RET		; КОНЕЦ СТРОКИ
	BNE	ERR		; НЕТ
	BR	COMMON		; ПРОДОЛЖИТЬ, АРГ. ОБЩЕГО ВИДА

81$:	BIT	#M.NUM,R2	; ДОЛЖНО БЫТЬ ЧИСЛО?
	BEQ	9$		; НЕТ
	CALL	GETNUM
	BCS	ERR
	MOV	R5,(R1)+
	INCB	CMDBUF+C$NUM	; УВЕЛИЧИМ СЧЕТЧИК
RET:	TST	(PC)+		; НОРМАЛЬНЫЙ ВОЗВРАТ
ERR:	SEC			; ВОЗВРАТ С ОШИБКОЙ
	RETURN

9$:	BIT	#M.LAB,R2	; ДОЛЖНА ПРИСУТСТВОВАТЬ МЕТКА/ЧИСЛО/"."
	BEQ	COMMON		; НЕТ, АРГУМЕНТ ОБЩЕГО ВИДА

LABUP:	MOVB	@R0,R5
	CMPB	R5,#'.		; АДРЕС ТЕКУЩЕЙ СТРОКИ?
	BNE	10$
	TSTB	1(R0)		; КОНЕЦ СТРОКИ?
	BNE	10$		; МОЖЕТ БЫТЬ МЕТКА, НАЧИНАЮЩАЯСЯ С "."
	MOV	MACLC,(R1)+
	BR	13$
10$:	CMPB	R5,#'+
	BEQ	11$		; ЧИСЛО
	CMPB	R5,#'-
	BEQ	11$		; ЧИСЛО
	CMPB	R5,#'9
	BHI	12$		; МЕТКА
	CMPB	R5,#'0
	BLO	12$		; МЕТКА
11$:	CALL	GETNUM
	BCS	ERR
	MOV	R5,(R1)+
	BR	13$
12$:	CALL	SRHNAM		; ПОИЩЕМ ИМЯ
	BCS	ERR
	MOV	R5,(R1)+
13$:	INCB	CMDBUF+C$NUM	; УВЕЛИЧИМ СЧЕТЧИК
	BR	RET
.DSABL	LSB

COMMON:
	MOV	#P.MN.T,R2	; ТАБЛИЦА МНЕМОНИЧЕСКИХ ПАРАМЕТРОВ
	CALL	PARMUP
	BCC	8$

1$:	CMPB	@R0,#''		; СИМВОЛЬНЫЙ АРГУМЕНТ?
	BNE	2$		; НЕТ
	TSTB	(R0)+		; ПРОПУСТИТЬ "'"
	CLR	R5		; ВЗЯТЬ КОД СИМВОЛА
	BISB	(R0)+,R5
	BR	7$		; НА СЛЕД. АРГУМЕНТ

2$:	CMPB	@R0,#'.		; АДРЕС ТЕКУЩЕЙ СТРОКИ
	BNE	3$
	TSTB	(R0)+
	MOV	MACLC,R5
	BR	7$

3$:	CMPB	@R0,#'@		; АРГУМЕНТ ТИПА LABEL
	BNE	4$
	TSTB	(R0)+		; ПРОПУСТИТЬ "@"
	CALL	SRHNAM		; ПОИЩЕМ ИМЯ
	BCS	10$
	BR	7$

4$:	CMPB	@R0,#'*		; АРГУМЕНТ ТИПА RADIX
	BNE	5$
	TSTB	(R0)+		; ПРОПУСТИТЬ "*"
	CALL	ASCR50		; ПРЕОБР. ИМЯ В RAD50
	MOV	R50NAM,(R1)+
	INCB	CMDBUF+C$NUM	; УВЕЛИЧИМ СЧЕТЧИК
	MOV	R50NAM+2,R5
	BR	7$

5$:	CMPB	@R0,#'"		; ДВА СИМВОЛА?
	BNE	6$		; НЕТ
	TSTB	(R0)+		; ПРОПУСТИТЬ "
	CLR	R5		; ВЗЯТЬ КОД СИМВОЛА
	BISB	1(R0),R5
	SWAB	R5
	BISB	(R0)+,R5
	TSTB	(R0)+
	BR	7$		; НА СЛЕД. АРГУМЕНТ

6$:	CALL	GETNUM
	BCS	10$

7$:	MOV	R5,(R1)+	; ДОПОЛНИТЕЛЬНОЕ СЛОВО
	INCB	CMDBUF+C$NUM	; УВЕЛИЧИМ СЧЕТЧИК

8$:	CALL	TSTDLM		; ПРОВЕРИТЬ НА ДОПУСТИМЫЙ РАЗДЕЛИТЕЛЬ
	BCS	9$		; КОНЕЦ СТРОКИ
	BNE	10$		; НЕТ
	BR	COMMON		; ОБРАБОТАЕМ ОЧЕРЕДНОЕ СЛОВО

9$:	TST	(PC)+
10$:	SEC
	RETURN
............................................................
;
; ПОИСК В ТАБЛИЦЕ ОПЕРАНДОВ
; ВХОД: R0 - ВХОДНАЯ СТРОКА
;	R2 - АДРЕС ТАБЛИЦЫ
; ВЫХОД: SEC - ОШИБКА ИЛИ:
;	R0 - ПРОДВИНУТ
;	R3 - ФЛАГИ ПАРАМЕТРА
;	 ПАРАМЕТР ЗАСЛАН
;
............................................................
PARMUP:
	CLR	-(SP)
1$:	MOV	R0,R4		; СОХР. R0
	MOV	(R2)+,R5	; ЗНАЧЕНИЕ ОПЕРАНДА
	MOV	(R2)+,@SP	; ФЛАГИ ОПЕРАНДА
2$:	MOVB	(R2)+,R3	; ОЧЕРЕДНОЙ СИМВОЛ
	BMI	5$		; НЕ НАШЛИ СИМВОЛИЧЕСКИЙ ПАРАМЕТР
	BEQ	4$		; КОНЕЦ СТРОКИ - НАШЛИ ПАРАМЕТР
	MOVB	(R4)+,-(SP)	; ОЧЕРЕДНОЙ СИМВОЛ СТРОКИ
	CALL	UPPCAS		; УСТАНОВИТЬ ВЕРХНИЙ РЕГИСТР
	CMPB	(SP)+,R3	; СИМВОЛ СОВПАДАЕТ?
	BEQ	2$		; ДА, ПРОДОЛЖИМ СРАВНЕНИЕ
3$:	TSTB	(R2)+		; ПРОПУСТИМ ОСТАТОК СТРОКИ
	BNE	3$
	INC	R2
	BIC	#1,R2		; ВЫРАВНИВАНИЕ НА СЛОВО
	BR	1$		; ПРОДОЛЖИМ ПОИСК
4$:	MOV	R4,R0		; ПРОДВИНЕМ R0
	MOV	R5,(R1)+	; ЗАСЛАТЬ ПАРАМЕТР В CMDBUF
	INCB	CMDBUF+C$NUM	; УВЕЛИЧИМ СЧЕТЧИК
	TST	(PC)+
5$:	SEC
	MOV	(SP)+,R3	; ФЛАГ ПАРАМЕТРА
	RETURN
............................................................
;
; ОТРАБОТКА КОМАНДЫ - КОММЕНТАРИЯ
;
............................................................
COMM:
	MOV	R0,R4
1$:	MOVB	(R0)+,(R1)+	; ПЕРЕПИСАТЬ СТРОКУ КОММЕНТАРИЯ
	BNE	1$
	SUB	R4,R0		; ОПРЕДЕЛИМ ЧИСЛО СЛОВ
	INC	R0
	ASR	R0
	MOVB	R0,CMDBUF+C$NUM	; ЗАСЛАТЬ В БУФЕР КОМАНДЫ
	CLC
	RETURN

..............................................................................
;
; П/П ПОИСКА В СПИСКЕ МЕТОК
; R3,R2 - ИСПОЛЬЗУЮТСЯ.
..............................................................................
SRHNAM:
	CALL	ASCR50		; ПРЕОБР. ИМЯ В RAD50
	MOV	#GLBPNT,R2
	CALL	2$
	BCC	4$
	MOV	#TXTPNT,R2
	BR	2$

1$:	CMP	4(R2),R50NAM
	BNE	2$
	CMP	6(R2),R50NAM+2
	BEQ	3$
2$:	MOV	@R2,R2		; СЛЕДУЮЩИЙ
	BNE	1$		; ЕСЛИ НЕ КОНЕЦ СПИСКА
	SEC
	RETURN
3$:	MOV	2(R2),R5	; ВОЗВРАТИТЬ ЗНАЧЕНИЕ МЕТКИ В R5
	CLC
4$:	RETURN
............................................................
;
; ВОЗВРАЩАЕТ В R5 ПРЕОБРАЗОВАННОЕ ЧИСЛО, R0 ПРОДВИНУТО
;
............................................................
GETNUM::
	JSR	R1,$SAVE4
	MOV	R0,R3		; СОХР. R0
1$:	CALL	TSTDLM		; ПРОВЕРИТЬ НА ДОПУСТИМЫЙ РАЗДЕЛИТЕЛЬ
	BCS	2$		; КОНЕЦ СТРОКИ
	BNE	1$		; НЕДОП.
2$:	DEC	R0
	MOV	R3,R5		; АДРЕС СТРОКИ
	MOV	R0,R4		; КОНЕЦ АРГУМЕНТА
	SUB	R5,R4		; ВЫЧИСЛИМ ДЛИНУ
	BNE	3$		; НЕПУСТ. АРГУМЕНТ
	SEC
	RETURN			; ПУСТОЙ, ОШИБКА

3$:	CMP	-(SP),-(SP)	; МЕСТО ДЛЯ ПРЕОБР.
	MOV	SP,R3
	CALL	.OD2CT		; ПРЕОБРАЗОВАТЬ
	MOV	@SP,(SP)+	; СТАРШИЕ РАЗРЯДЫ
	MOV	(SP)+,R5
4$:	RETURN
............................................................
;
; ПРОВЕРКА НА ДОПУСТИМЫЙ РАЗДЕЛИТЕЛЬ ИЛИ КОНЕЦ СТРОКИ
; SEC - КОНЕЦ СТРОКИ
; SEZ - СИМВОЛ-РАЗДЕЛИТЕЛЬ
............................................................
TSTDLM:
	SEC
	MOVB	(R0)+,R5
	BEQ	2$
	CMPB	R5,#':
	BEQ	1$
	CMPB	R5,#40		; SPACE
	BEQ	1$
	CMPB	R5,#'/
1$:	CLC
2$:	RETURN
............................................................
;
; ПРЕОБРАЗОВАТЬ СИМВОЛ В ВЕРХНИЙ РЕГИСТР
;
............................................................
UPPCAS:
	CMPB	2(SP),#'A+40
	BLO	1$
	CMPB	2(SP),#'Z+40
	BHI	1$
	BICB	#40,2(SP)
1$:	RETURN

	.END
